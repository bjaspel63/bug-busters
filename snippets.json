[
  {
    "code": "prin('Hello World')",
    "fixes": [
      {
        "line": 0,
        "position": 0,
        "length": 4,
        "correct": "print",
        "explanation": "The function name is 'print', not 'prin'. Spelling matters in coding!"
      }
    ]
  },
  {
    "code": "for i in range(5)\n    print(i)",
    "fixes": [
      {
        "line": 0,
        "position": 17,
        "length": 0,
        "correct": ":",
        "explanation": "A colon ':' is needed after the 'for' loop to start the loop block."
      }
    ]
  },
  {
    "code": "if x = 10:\n    print('x is 10')",
    "fixes": [
      {
        "line": 0,
        "position": 5,
        "length": 1,
        "correct": "==",
        "explanation": "'=' assigns a value, but to check if x equals 10, use '=='."
      }
    ]
  },
  {
    "code": "def greet(name)\n    print('Hello', name)",
    "fixes": [
      {
        "line": 0,
        "position": 16,
        "length": 0,
        "correct": ":",
        "explanation": "Functions need a colon ':' after the parameters to define the function body."
      }
    ]
  },
  {
    "code": "while True\n    print('Looping')",
    "fixes": [
      {
        "line": 0,
        "position": 10,
        "length": 0,
        "correct": ":",
        "explanation": "The 'while' loop requires a colon ':' after the condition."
      }
    ]
  },
  {
    "code": "name = input('Enter name: ')\nprint('Hello' + name)",
    "fixes": [
      {
        "line": 1,
        "position": 0,
        "length": 0,
        "correct": "  ",
        "explanation": "Indentation is important! The print statement should be indented inside the block."
      }
    ]
  },
  {
    "code": "def add(a, b):\n    return a + b\n\nprint(add(2))",
    "fixes": [
      {
        "line": 3,
        "position": 10,
        "length": 1,
        "correct": "2, 3",
        "explanation": "The function 'add' needs two numbers, so we pass both 2 and 3 as arguments."
      }
    ]
  },
  {
    "code": "for i in range(3):\nprint(i)",
    "fixes": [
      {
        "line": 1,
        "position": 0,
        "length": 0,
        "correct": "    ",
        "explanation": "The code inside a 'for' loop must be indented to show it belongs to the loop."
      }
    ]
  },
  {
    "code": "my_dict = {'a': 1, 'b': 2}\nprint(my_dict['c'])",
    "fixes": [
      {
        "line": 1,
        "position": 15,
        "length": 3,
        "correct": "'a'",
        "explanation": "'c' is not a key in the dictionary. Use an existing key like 'a' to avoid errors."
      }
    ]
  },
  {
    "code": "x = [1, 2, 3]\nprint(x(0))",
    "fixes": [
      {
        "line": 1,
        "position": 7,
        "length": 1,
        "correct": "[0]",
        "explanation": "Lists use square brackets for indexing, not parentheses."
      }
    ]
  },
  {
    "code": "for i in range(3)\n    print(i)",
    "fixes": [
      {
        "line": 0,
        "position": 16,
        "length": 0,
        "correct": ":",
        "explanation": "Don't forget the colon ':' after a 'for' loop."
      }
    ]
  },
  {
    "code": "if True\nprint('Yes')",
    "fixes": [
      {
        "line": 0,
        "position": 7,
        "length": 0,
        "correct": ":",
        "explanation": "An 'if' statement needs a colon ':' at the end."
      }
    ]
  },
  {
    "code": "x = 10\nif x > 5:\nprint('Big')",
    "fixes": [
      {
        "line": 2,
        "position": 0,
        "length": 0,
        "correct": "    ",
        "explanation": "Indent the 'print' statement inside the if block."
      }
    ]
  },
  {
    "code": "def square(x):\nreturn x * x",
    "fixes": [
      {
        "line": 1,
        "position": 0,
        "length": 0,
        "correct": "    ",
        "explanation": "The return line must be indented inside the function."
      }
    ]
  },
  {
    "code": "print('The sum is: ' + 5)",
    "fixes": [
      {
        "line": 0,
        "position": 21,
        "length": 1,
        "correct": "str(5)",
        "explanation": "Numbers must be converted to strings before concatenation with text."
      }
    ]
  },
  {
    "code": "my_list = [1, 2, 3]\nprint(my_list[3])",
    "fixes": [
      {
        "line": 1,
        "position": 15,
        "length": 1,
        "correct": "2",
        "explanation": "Index 3 is out of range for a list of length 3. The last index is 2."
      }
    ]
  },
  {
    "code": "for i in range(5):\n    print i",
    "fixes": [
      {
        "line": 1,
        "position": 10,
        "length": 6,
        "correct": "print(i)",
        "explanation": "In Python 3, 'print' requires parentheses."
      }
    ]
  },
  {
    "code": "def hello(name):\n    print('Hello' name)",
    "fixes": [
      {
        "line": 1,
        "position": 19,
        "length": 0,
        "correct": ", ",
        "explanation": "You must separate arguments in print with a comma."
      }
    ]
  },
  {
    "code": "x = 5\ny = 0\nprint(x / y)",
    "fixes": [
      {
        "line": 2,
        "position": 9,
        "length": 3,
        "correct": "x / (y+1)",
        "explanation": "Division by zero is not allowed. Use a non-zero denominator."
      }
    ]
  },
  {
    "code": "numbers = [1, 2, 3]\nprint(numbers.len())",
    "fixes": [
      {
        "line": 1,
        "position": 13,
        "length": 7,
        "correct": "len(numbers)",
        "explanation": "Use the built-in len() function, not '.len()'."
      }
    ]
  }
]